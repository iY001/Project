// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  username   String
  email      String   @unique
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Event {
  id                     String   @id @default(auto()) @map("_id") @db.ObjectId
  event_name             String
  start_date             DateTime
  end_date               DateTime
  max_score              Int
  venue                  String
  organizer_name         String
  organizer_email        String?
  organizer_phone_number String?
  created_at             DateTime @default(now())
  updated_at             DateTime @updatedAt
  // team_id                String?  @db.ObjectId
  // teams                  Team?    @relation(fields: [team_id], references: [id])
  // match_id               String?  @map("match_id") @db.ObjectId
  // matches                Match?   @relation(fields: [match_id], references: [id])
  matches                Match[]
}

model Match {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  score1         Int?             @default(0)
  score2         Int?             @default(0)
  winner         String?          @default("Draw")
  match_date     DateTime?
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
  event_id       String           @db.ObjectId
  event          Event            @relation(fields: [event_id], references: [id])
  TeamAndMatches TeamAndMatches[]
}

model TeamAndMatches {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  match_id String @db.ObjectId
  match    Match  @relation(fields: [match_id], references: [id])
  team_id  String @db.ObjectId
  team     Team   @relation(fields: [team_id], references: [id])
}

model Team {
  id                 String           @id @default(auto()) @map("_id") @db.ObjectId
  team_name          String
  team_logo          String?
  total_score        Int
  coach_name         String
  coach_email        String?
  coach_phone_number String?
  created_at         DateTime         @default(now())
  updated_at         DateTime         @updatedAt
  players            Player[]
  TeamAndMatches     TeamAndMatches[]
}

model Player {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  email        String
  team_id      String?  @map("team_id") @db.ObjectId
  team         Team?    @relation(fields: [team_id], references: [id])
  score        Int?
  age          Int?
  gender       String
  phone_number String?
  address      String?
  city         String?
  state        String?
  country      String?
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
}
